# Copyright 2021 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
"""changed bninception for tsn"""
''' 这个脚本好像是构建 BNInception，被models.py调用了'''
import mindspore.nn as nn
import mindspore.ops as P
import mindspore.common.dtype as mstype

from mindspore.common.initializer import Normal

class First_layer(nn.Cell):

    def __init__(self, modality):
        super(First_layer, self).__init__()

        self.modality = modality
        if self.modality == 'Flow':
            self.conv1_7x7_s2 = nn.Conv2d(10, 64, kernel_size=7, stride=2, pad_mode='pad', padding=3, has_bias=True)
        elif self.modality == 'RGBDiff':
            self.conv1_7x7_s2 = nn.Conv2d(15, 64, kernel_size=7, stride=2, pad_mode='pad', padding=3, has_bias=True)
        else:
            self.conv1_7x7_s2 = nn.Conv2d(3, 64, kernel_size=7, stride=2, pad_mode='pad', padding=3, has_bias=True)

    def construct(self, x):
        return self.conv1_7x7_s2(x)

class Last_layer(nn.Cell):

    def __init__(self, dropout, num_class):
        super(Last_layer, self).__init__()
        feature_dim = 1024
        self.num_class = num_class
        self.dropout = dropout
        self.reshape = P.Reshape()

        if self.dropout == 0:
            self.fc = nn.Dense(feature_dim, num_class)
            self.new_fc = None
        else:
            self.fc = nn.Dropout(keep_prob=self.dropout)
            self.new_fc = nn.Dense(feature_dim, num_class, weight_init=Normal(0.001))


    def construct(self, x):
        x = self.reshape(x, (x.shape[0], -1))
        x_out = self.fc(x)
        if self.new_fc:
            x_out = self.new_fc(x_out)
        return x_out

class BNInception(nn.Cell):

    def __init__(self, num_class, modality, dropout):
        super(BNInception, self).__init__()

        self.conv1_7x7_s2 = First_layer(modality)
        self.conv1_7x7_s2_bn = nn.BatchNorm2d(64, affine=True)
        self.conv1_relu_7x7 = nn.ReLU()

        self.pool1_3x3_s2 = nn.MaxPool2d(kernel_size=3, stride=2, pad_mode='same')
        #self.pool1_3x3_s2 = nn.MaxPool2d(kernel_size=3, stride=2)
        self.conv2_3x3_reduce = nn.Conv2d(64, 64, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.conv2_3x3_reduce_bn = nn.BatchNorm2d(64, affine=False)
        self.conv2_relu_3x3_reduce = nn.ReLU()
        self.conv2_3x3 = nn.Conv2d(64, 192, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.conv2_3x3_bn = nn.BatchNorm2d(192, affine=False)
        self.conv2_relu_3x3 = nn.ReLU()
        self.pool2_3x3_s2 = nn.MaxPool2d(kernel_size=3, stride=2, pad_mode='same')
        #self.pool2_3x3_s2 = nn.MaxPool2d(kernel_size=3, stride=2)

        self.inception_3a_1x1 = nn.Conv2d(192, 64, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_3a_1x1_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_3a_relu_1x1 = nn.ReLU()

        self.inception_3a_3x3_reduce = nn.Conv2d(192, 64, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_3a_3x3_reduce_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_3a_relu_3x3_reduce = nn.ReLU()

        self.inception_3a_3x3 = nn.Conv2d(64, 64, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_3a_3x3_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_3a_relu_3x3 = nn.ReLU()

        self.inception_3a_double_3x3_reduce = nn.Conv2d(192, 64, kernel_size=1, pad_mode='valid', stride=1, has_bias=True)
        self.inception_3a_double_3x3_reduce_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_3a_relu_double_3x3_reduce = nn.ReLU()

        self.inception_3a_double_3x3_1 = nn.Conv2d(64, 96, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_3a_double_3x3_1_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_3a_relu_double_3x3_1 = nn.ReLU()

        self.inception_3a_double_3x3_2 = nn.Conv2d(96, 96, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_3a_double_3x3_2_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_3a_relu_double_3x3_2 = nn.ReLU()

        self.inception_3a_pool = nn.AvgPool2d(kernel_size=3, stride=1, pad_mode='same')

        self.inception_3a_pool_proj = nn.Conv2d(192, 32, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_3a_pool_proj_bn = nn.BatchNorm2d(32, affine=False)
        self.inception_3a_relu_pool_proj = nn.ReLU()

        self.inception_3b_1x1 = nn.Conv2d(256, 64, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_3b_1x1_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_3b_relu_1x1 = nn.ReLU()

        self.inception_3b_3x3_reduce = nn.Conv2d(256, 64, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_3b_3x3_reduce_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_3b_relu_3x3_reduce = nn.ReLU()

        self.inception_3b_3x3 = nn.Conv2d(64, 96, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_3b_3x3_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_3b_relu_3x3 = nn.ReLU()

        self.inception_3b_double_3x3_reduce = nn.Conv2d(256, 64, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_3b_double_3x3_reduce_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_3b_relu_double_3x3_reduce = nn.ReLU()
        self.inception_3b_double_3x3_1 = nn.Conv2d(64, 96, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_3b_double_3x3_1_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_3b_relu_double_3x3_1 = nn.ReLU()
        self.inception_3b_double_3x3_2 = nn.Conv2d(96, 96, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_3b_double_3x3_2_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_3b_relu_double_3x3_2 = nn.ReLU()
        self.inception_3b_pool = nn.AvgPool2d(kernel_size=3, stride=1, pad_mode='same')
        self.inception_3b_pool_proj = nn.Conv2d(256, 64, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_3b_pool_proj_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_3b_relu_pool_proj = nn.ReLU()
        self.inception_3c_3x3_reduce = nn.Conv2d(320, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_3c_3x3_reduce_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_3c_relu_3x3_reduce = nn.ReLU()
        self.inception_3c_3x3 = nn.Conv2d(128, 160, kernel_size=3, stride=2, pad_mode='pad', padding=1, has_bias=True)
        self.inception_3c_3x3_bn = nn.BatchNorm2d(160, affine=False)
        self.inception_3c_relu_3x3 = nn.ReLU()
        self.inception_3c_double_3x3_reduce = nn.Conv2d(320, 64, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_3c_double_3x3_reduce_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_3c_relu_double_3x3_reduce = nn.ReLU()
        self.inception_3c_double_3x3_1 = nn.Conv2d(64, 96, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_3c_double_3x3_1_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_3c_relu_double_3x3_1 = nn.ReLU()
        self.inception_3c_double_3x3_2 = nn.Conv2d(96, 96, kernel_size=3, stride=2, pad_mode='pad', padding=1, has_bias=True)
        self.inception_3c_double_3x3_2_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_3c_relu_double_3x3_2 = nn.ReLU()
        self.inception_3c_pool = nn.MaxPool2d(kernel_size=3, stride=2, pad_mode='same')
        #self.inception_3c_pool = nn.MaxPool2d(kernel_size=3, stride=2)
        self.inception_4a_1x1 = nn.Conv2d(576, 224, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4a_1x1_bn = nn.BatchNorm2d(224, affine=False)
        self.inception_4a_relu_1x1 = nn.ReLU()
        self.inception_4a_3x3_reduce = nn.Conv2d(576, 64, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4a_3x3_reduce_bn = nn.BatchNorm2d(64, affine=False)
        self.inception_4a_relu_3x3_reduce = nn.ReLU()
        self.inception_4a_3x3 = nn.Conv2d(64, 96, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4a_3x3_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_4a_relu_3x3 = nn.ReLU()
        self.inception_4a_double_3x3_reduce = nn.Conv2d(576, 96, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4a_double_3x3_reduce_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_4a_relu_double_3x3_reduce = nn.ReLU()
        self.inception_4a_double_3x3_1 = nn.Conv2d(96, 128, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4a_double_3x3_1_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4a_relu_double_3x3_1 = nn.ReLU()
        self.inception_4a_double_3x3_2 = nn.Conv2d(128, 128, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4a_double_3x3_2_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4a_relu_double_3x3_2 = nn.ReLU()
        self.inception_4a_pool = nn.AvgPool2d(kernel_size=3, stride=1, pad_mode='same')
        self.inception_4a_pool_proj = nn.Conv2d(576, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4a_pool_proj_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4a_relu_pool_proj = nn.ReLU()
        self.inception_4b_1x1 = nn.Conv2d(576, 192, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4b_1x1_bn = nn.BatchNorm2d(192, affine=False)
        self.inception_4b_relu_1x1 = nn.ReLU()
        self.inception_4b_3x3_reduce = nn.Conv2d(576, 96, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4b_3x3_reduce_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_4b_relu_3x3_reduce = nn.ReLU()
        self.inception_4b_3x3 = nn.Conv2d(96, 128, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4b_3x3_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4b_relu_3x3 = nn.ReLU()
        self.inception_4b_double_3x3_reduce = nn.Conv2d(576, 96, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4b_double_3x3_reduce_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_4b_relu_double_3x3_reduce = nn.ReLU()
        self.inception_4b_double_3x3_1 = nn.Conv2d(96, 128, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4b_double_3x3_1_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4b_relu_double_3x3_1 = nn.ReLU()
        self.inception_4b_double_3x3_2 = nn.Conv2d(128, 128, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4b_double_3x3_2_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4b_relu_double_3x3_2 = nn.ReLU()
        self.inception_4b_pool = nn.AvgPool2d(kernel_size=3, stride=1, pad_mode='same')
        self.inception_4b_pool_proj = nn.Conv2d(576, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4b_pool_proj_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4b_relu_pool_proj = nn.ReLU()
        self.inception_4c_1x1 = nn.Conv2d(576, 160, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4c_1x1_bn = nn.BatchNorm2d(160, affine=False)
        self.inception_4c_relu_1x1 = nn.ReLU()
        self.inception_4c_3x3_reduce = nn.Conv2d(576, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4c_3x3_reduce_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4c_relu_3x3_reduce = nn.ReLU()
        self.inception_4c_3x3 = nn.Conv2d(128, 160, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4c_3x3_bn = nn.BatchNorm2d(160, affine=False)
        self.inception_4c_relu_3x3 = nn.ReLU()
        self.inception_4c_double_3x3_reduce = nn.Conv2d(576, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4c_double_3x3_reduce_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4c_relu_double_3x3_reduce = nn.ReLU()
        self.inception_4c_double_3x3_1 = nn.Conv2d(128, 160, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4c_double_3x3_1_bn = nn.BatchNorm2d(160, affine=False)
        self.inception_4c_relu_double_3x3_1 = nn.ReLU()
        self.inception_4c_double_3x3_2 = nn.Conv2d(160, 160, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4c_double_3x3_2_bn = nn.BatchNorm2d(160, affine=False)
        self.inception_4c_relu_double_3x3_2 = nn.ReLU()
        self.inception_4c_pool = nn.AvgPool2d(kernel_size=3, stride=1, pad_mode='same')
        self.inception_4c_pool_proj = nn.Conv2d(576, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4c_pool_proj_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4c_relu_pool_proj = nn.ReLU()
        self.inception_4d_1x1 = nn.Conv2d(608, 96, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4d_1x1_bn = nn.BatchNorm2d(96, affine=False)
        self.inception_4d_relu_1x1 = nn.ReLU()
        self.inception_4d_3x3_reduce = nn.Conv2d(608, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4d_3x3_reduce_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4d_relu_3x3_reduce = nn.ReLU()
        self.inception_4d_3x3 = nn.Conv2d(128, 192, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4d_3x3_bn = nn.BatchNorm2d(192, affine=False)
        self.inception_4d_relu_3x3 = nn.ReLU()
        self.inception_4d_double_3x3_reduce = nn.Conv2d(608, 160, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4d_double_3x3_reduce_bn = nn.BatchNorm2d(160, affine=False)
        self.inception_4d_relu_double_3x3_reduce = nn.ReLU()
        self.inception_4d_double_3x3_1 = nn.Conv2d(160, 192, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4d_double_3x3_1_bn = nn.BatchNorm2d(192, affine=False)
        self.inception_4d_relu_double_3x3_1 = nn.ReLU()
        self.inception_4d_double_3x3_2 = nn.Conv2d(192, 192, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4d_double_3x3_2_bn = nn.BatchNorm2d(192, affine=False)
        self.inception_4d_relu_double_3x3_2 = nn.ReLU()
        self.inception_4d_pool = nn.AvgPool2d(kernel_size=3, stride=1, pad_mode='same')
        self.inception_4d_pool_proj = nn.Conv2d(608, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4d_pool_proj_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4d_relu_pool_proj = nn.ReLU()
        self.inception_4e_3x3_reduce = nn.Conv2d(608, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4e_3x3_reduce_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_4e_relu_3x3_reduce = nn.ReLU()
        self.inception_4e_3x3 = nn.Conv2d(128, 192, kernel_size=3, stride=2, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4e_3x3_bn = nn.BatchNorm2d(192, affine=False)
        self.inception_4e_relu_3x3 = nn.ReLU()
        self.inception_4e_double_3x3_reduce = nn.Conv2d(608, 192, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_4e_double_3x3_reduce_bn = nn.BatchNorm2d(192, affine=False)
        self.inception_4e_relu_double_3x3_reduce = nn.ReLU()
        self.inception_4e_double_3x3_1 = nn.Conv2d(192, 256, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4e_double_3x3_1_bn = nn.BatchNorm2d(256, affine=False)
        self.inception_4e_relu_double_3x3_1 = nn.ReLU()
        self.inception_4e_double_3x3_2 = nn.Conv2d(256, 256, kernel_size=3, stride=2, pad_mode='pad', padding=1, has_bias=True)
        self.inception_4e_double_3x3_2_bn = nn.BatchNorm2d(256, affine=False)
        self.inception_4e_relu_double_3x3_2 = nn.ReLU()
        self.inception_4e_pool = nn.MaxPool2d(kernel_size=3, stride=2, pad_mode='same')
        #self.inception_4e_pool = nn.MaxPool2d(kernel_size=3, stride=2)
        self.inception_5a_1x1 = nn.Conv2d(1056, 352, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_5a_1x1_bn = nn.BatchNorm2d(352, affine=False)
        self.inception_5a_relu_1x1 = nn.ReLU()
        self.inception_5a_3x3_reduce = nn.Conv2d(1056, 192, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_5a_3x3_reduce_bn = nn.BatchNorm2d(192, affine=False)
        self.inception_5a_relu_3x3_reduce = nn.ReLU()
        self.inception_5a_3x3 = nn.Conv2d(192, 320, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_5a_3x3_bn = nn.BatchNorm2d(320, affine=False)
        self.inception_5a_relu_3x3 = nn.ReLU()
        self.inception_5a_double_3x3_reduce = nn.Conv2d(1056, 160, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_5a_double_3x3_reduce_bn = nn.BatchNorm2d(160, affine=False)
        self.inception_5a_relu_double_3x3_reduce = nn.ReLU()
        self.inception_5a_double_3x3_1 = nn.Conv2d(160, 224, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_5a_double_3x3_1_bn = nn.BatchNorm2d(224, affine=False)
        self.inception_5a_relu_double_3x3_1 = nn.ReLU()
        self.inception_5a_double_3x3_2 = nn.Conv2d(224, 224, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_5a_double_3x3_2_bn = nn.BatchNorm2d(224, affine=False)
        self.inception_5a_relu_double_3x3_2 = nn.ReLU()
        self.inception_5a_pool = nn.AvgPool2d(kernel_size=3, stride=1, pad_mode='same')
        self.inception_5a_pool_proj = nn.Conv2d(1056, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_5a_pool_proj_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_5a_relu_pool_proj = nn.ReLU()
        self.inception_5b_1x1 = nn.Conv2d(1024, 352, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_5b_1x1_bn = nn.BatchNorm2d(352, affine=False)
        self.inception_5b_relu_1x1 = nn.ReLU()
        self.inception_5b_3x3_reduce = nn.Conv2d(1024, 192, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_5b_3x3_reduce_bn = nn.BatchNorm2d(192, affine=False)
        self.inception_5b_relu_3x3_reduce = nn.ReLU()
        self.inception_5b_3x3 = nn.Conv2d(192, 320, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_5b_3x3_bn = nn.BatchNorm2d(320, affine=False)
        self.inception_5b_relu_3x3 = nn.ReLU()
        self.inception_5b_double_3x3_reduce = nn.Conv2d(1024, 192, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_5b_double_3x3_reduce_bn = nn.BatchNorm2d(192, affine=False)
        self.inception_5b_relu_double_3x3_reduce = nn.ReLU ()
        self.inception_5b_double_3x3_1 = nn.Conv2d(192, 224, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_5b_double_3x3_1_bn = nn.BatchNorm2d(224, affine=False)
        self.inception_5b_relu_double_3x3_1 = nn.ReLU ()
        self.inception_5b_double_3x3_2 = nn.Conv2d(224, 224, kernel_size=3, stride=1, pad_mode='pad', padding=1, has_bias=True)
        self.inception_5b_double_3x3_2_bn = nn.BatchNorm2d(224, affine=False)
        self.inception_5b_relu_double_3x3_2 = nn.ReLU()
        self.inception_5b_pool = nn.MaxPool2d(kernel_size=3, stride=1, pad_mode='same')
        self.inception_5b_pool_proj = nn.Conv2d(1024, 128, kernel_size=1, stride=1, pad_mode='valid', has_bias=True)
        self.inception_5b_pool_proj_bn = nn.BatchNorm2d(128, affine=False)
        self.inception_5b_relu_pool_proj = nn.ReLU()
        self.fc = Last_layer(num_class=num_class, dropout=dropout)
        self.global_pool = nn.AvgPool2d(kernel_size=7)

        self.concate = P.Concat(axis=1)

    def features(self, x):
        conv1_7x7_s2_out = self.conv1_7x7_s2(x)
        conv1_7x7_s2_bn_out = self.conv1_7x7_s2_bn(conv1_7x7_s2_out)
        conv1_relu_7x7_out = self.conv1_relu_7x7(conv1_7x7_s2_bn_out)
        pool1_3x3_s2_out = self.pool1_3x3_s2(conv1_relu_7x7_out)
        conv2_3x3_reduce_out = self.conv2_3x3_reduce(pool1_3x3_s2_out)
        conv2_3x3_reduce_bn_out = self.conv2_3x3_reduce_bn(conv2_3x3_reduce_out)
        conv2_relu_3x3_reduce_out = self.conv2_relu_3x3_reduce(conv2_3x3_reduce_bn_out)
        conv2_3x3_out = self.conv2_3x3(conv2_relu_3x3_reduce_out)
        conv2_3x3_bn_out = self.conv2_3x3_bn(conv2_3x3_out)
        conv2_relu_3x3_out = self.conv2_relu_3x3(conv2_3x3_bn_out)
        pool2_3x3_s2_out = self.pool2_3x3_s2(conv2_relu_3x3_out)
        inception_3a_1x1_out = self.inception_3a_1x1(pool2_3x3_s2_out)
        inception_3a_1x1_bn_out = self.inception_3a_1x1_bn(inception_3a_1x1_out)
        inception_3a_relu_1x1_out = self.inception_3a_relu_1x1(inception_3a_1x1_bn_out)
        inception_3a_3x3_reduce_out = self.inception_3a_3x3_reduce(pool2_3x3_s2_out)
        inception_3a_3x3_reduce_bn_out = self.inception_3a_3x3_reduce_bn(inception_3a_3x3_reduce_out)
        inception_3a_relu_3x3_reduce_out = self.inception_3a_relu_3x3_reduce(inception_3a_3x3_reduce_bn_out)
        inception_3a_3x3_out = self.inception_3a_3x3(inception_3a_relu_3x3_reduce_out)
        inception_3a_3x3_bn_out = self.inception_3a_3x3_bn(inception_3a_3x3_out)
        inception_3a_relu_3x3_out = self.inception_3a_relu_3x3(inception_3a_3x3_bn_out)
        inception_3a_double_3x3_reduce_out = self.inception_3a_double_3x3_reduce(pool2_3x3_s2_out)
        inception_3a_double_3x3_reduce_bn_out = self.inception_3a_double_3x3_reduce_bn(inception_3a_double_3x3_reduce_out)
        inception_3a_relu_double_3x3_reduce_out = self.inception_3a_relu_double_3x3_reduce(inception_3a_double_3x3_reduce_bn_out)
        inception_3a_double_3x3_1_out = self.inception_3a_double_3x3_1(inception_3a_relu_double_3x3_reduce_out)
        inception_3a_double_3x3_1_bn_out = self.inception_3a_double_3x3_1_bn(inception_3a_double_3x3_1_out)
        inception_3a_relu_double_3x3_1_out = self.inception_3a_relu_double_3x3_1(inception_3a_double_3x3_1_bn_out)
        inception_3a_double_3x3_2_out = self.inception_3a_double_3x3_2(inception_3a_relu_double_3x3_1_out)
        inception_3a_double_3x3_2_bn_out = self.inception_3a_double_3x3_2_bn(inception_3a_double_3x3_2_out)
        inception_3a_relu_double_3x3_2_out = self.inception_3a_relu_double_3x3_2(inception_3a_double_3x3_2_bn_out)
        inception_3a_pool_out = self.inception_3a_pool(pool2_3x3_s2_out)
        inception_3a_pool_proj_out = self.inception_3a_pool_proj(inception_3a_pool_out)
        inception_3a_pool_proj_bn_out = self.inception_3a_pool_proj_bn(inception_3a_pool_proj_out)
        inception_3a_relu_pool_proj_out = self.inception_3a_relu_pool_proj(inception_3a_pool_proj_bn_out)
        inception_3a_output_out = self.concate((inception_3a_relu_1x1_out, inception_3a_relu_3x3_out, inception_3a_relu_double_3x3_2_out, inception_3a_relu_pool_proj_out))
        inception_3b_1x1_out = self.inception_3b_1x1(inception_3a_output_out)
        inception_3b_1x1_bn_out = self.inception_3b_1x1_bn(inception_3b_1x1_out)
        inception_3b_relu_1x1_out = self.inception_3b_relu_1x1(inception_3b_1x1_bn_out)
        inception_3b_3x3_reduce_out = self.inception_3b_3x3_reduce(inception_3a_output_out)
        inception_3b_3x3_reduce_bn_out = self.inception_3b_3x3_reduce_bn(inception_3b_3x3_reduce_out)
        inception_3b_relu_3x3_reduce_out = self.inception_3b_relu_3x3_reduce(inception_3b_3x3_reduce_bn_out)
        inception_3b_3x3_out = self.inception_3b_3x3(inception_3b_relu_3x3_reduce_out)
        inception_3b_3x3_bn_out = self.inception_3b_3x3_bn(inception_3b_3x3_out)
        inception_3b_relu_3x3_out = self.inception_3b_relu_3x3(inception_3b_3x3_bn_out)
        inception_3b_double_3x3_reduce_out = self.inception_3b_double_3x3_reduce(inception_3a_output_out)
        inception_3b_double_3x3_reduce_bn_out = self.inception_3b_double_3x3_reduce_bn(inception_3b_double_3x3_reduce_out)
        inception_3b_relu_double_3x3_reduce_out = self.inception_3b_relu_double_3x3_reduce(inception_3b_double_3x3_reduce_bn_out)
        inception_3b_double_3x3_1_out = self.inception_3b_double_3x3_1(inception_3b_relu_double_3x3_reduce_out)
        inception_3b_double_3x3_1_bn_out = self.inception_3b_double_3x3_1_bn(inception_3b_double_3x3_1_out)
        inception_3b_relu_double_3x3_1_out = self.inception_3b_relu_double_3x3_1(inception_3b_double_3x3_1_bn_out)
        inception_3b_double_3x3_2_out = self.inception_3b_double_3x3_2(inception_3b_relu_double_3x3_1_out)
        inception_3b_double_3x3_2_bn_out = self.inception_3b_double_3x3_2_bn(inception_3b_double_3x3_2_out)
        inception_3b_relu_double_3x3_2_out = self.inception_3b_relu_double_3x3_2(inception_3b_double_3x3_2_bn_out)
        inception_3b_pool_out = self.inception_3b_pool(inception_3a_output_out)
        inception_3b_pool_proj_out = self.inception_3b_pool_proj(inception_3b_pool_out)
        inception_3b_pool_proj_bn_out = self.inception_3b_pool_proj_bn(inception_3b_pool_proj_out)
        inception_3b_relu_pool_proj_out = self.inception_3b_relu_pool_proj(inception_3b_pool_proj_bn_out)
        inception_3b_output_out = self.concate((inception_3b_relu_1x1_out, inception_3b_relu_3x3_out, inception_3b_relu_double_3x3_2_out, inception_3b_relu_pool_proj_out))
        inception_3c_3x3_reduce_out = self.inception_3c_3x3_reduce(inception_3b_output_out)
        inception_3c_3x3_reduce_bn_out = self.inception_3c_3x3_reduce_bn(inception_3c_3x3_reduce_out)
        inception_3c_relu_3x3_reduce_out = self.inception_3c_relu_3x3_reduce(inception_3c_3x3_reduce_bn_out)
        inception_3c_3x3_out = self.inception_3c_3x3(inception_3c_relu_3x3_reduce_out)
        inception_3c_3x3_bn_out = self.inception_3c_3x3_bn(inception_3c_3x3_out)
        inception_3c_relu_3x3_out = self.inception_3c_relu_3x3(inception_3c_3x3_bn_out)
        inception_3c_double_3x3_reduce_out = self.inception_3c_double_3x3_reduce(inception_3b_output_out)
        inception_3c_double_3x3_reduce_bn_out = self.inception_3c_double_3x3_reduce_bn(inception_3c_double_3x3_reduce_out)
        inception_3c_relu_double_3x3_reduce_out = self.inception_3c_relu_double_3x3_reduce(inception_3c_double_3x3_reduce_bn_out)
        inception_3c_double_3x3_1_out = self.inception_3c_double_3x3_1(inception_3c_relu_double_3x3_reduce_out)
        inception_3c_double_3x3_1_bn_out = self.inception_3c_double_3x3_1_bn(inception_3c_double_3x3_1_out)
        inception_3c_relu_double_3x3_1_out = self.inception_3c_relu_double_3x3_1(inception_3c_double_3x3_1_bn_out)
        inception_3c_double_3x3_2_out = self.inception_3c_double_3x3_2(inception_3c_relu_double_3x3_1_out)
        inception_3c_double_3x3_2_bn_out = self.inception_3c_double_3x3_2_bn(inception_3c_double_3x3_2_out)
        inception_3c_relu_double_3x3_2_out = self.inception_3c_relu_double_3x3_2(inception_3c_double_3x3_2_bn_out)
        inception_3c_pool_out = self.inception_3c_pool(inception_3b_output_out)
        inception_3c_output_out = self.concate((inception_3c_relu_3x3_out, inception_3c_relu_double_3x3_2_out, inception_3c_pool_out))
        inception_4a_1x1_out = self.inception_4a_1x1(inception_3c_output_out)
        inception_4a_1x1_bn_out = self.inception_4a_1x1_bn(inception_4a_1x1_out)
        inception_4a_relu_1x1_out = self.inception_4a_relu_1x1(inception_4a_1x1_bn_out)
        inception_4a_3x3_reduce_out = self.inception_4a_3x3_reduce(inception_3c_output_out)
        inception_4a_3x3_reduce_bn_out = self.inception_4a_3x3_reduce_bn(inception_4a_3x3_reduce_out)
        inception_4a_relu_3x3_reduce_out = self.inception_4a_relu_3x3_reduce(inception_4a_3x3_reduce_bn_out)
        inception_4a_3x3_out = self.inception_4a_3x3(inception_4a_relu_3x3_reduce_out)
        inception_4a_3x3_bn_out = self.inception_4a_3x3_bn(inception_4a_3x3_out)
        inception_4a_relu_3x3_out = self.inception_4a_relu_3x3(inception_4a_3x3_bn_out)
        inception_4a_double_3x3_reduce_out = self.inception_4a_double_3x3_reduce(inception_3c_output_out)
        inception_4a_double_3x3_reduce_bn_out = self.inception_4a_double_3x3_reduce_bn(inception_4a_double_3x3_reduce_out)
        inception_4a_relu_double_3x3_reduce_out = self.inception_4a_relu_double_3x3_reduce(inception_4a_double_3x3_reduce_bn_out)
        inception_4a_double_3x3_1_out = self.inception_4a_double_3x3_1(inception_4a_relu_double_3x3_reduce_out)
        inception_4a_double_3x3_1_bn_out = self.inception_4a_double_3x3_1_bn(inception_4a_double_3x3_1_out)
        inception_4a_relu_double_3x3_1_out = self.inception_4a_relu_double_3x3_1(inception_4a_double_3x3_1_bn_out)
        inception_4a_double_3x3_2_out = self.inception_4a_double_3x3_2(inception_4a_relu_double_3x3_1_out)
        inception_4a_double_3x3_2_bn_out = self.inception_4a_double_3x3_2_bn(inception_4a_double_3x3_2_out)
        inception_4a_relu_double_3x3_2_out = self.inception_4a_relu_double_3x3_2(inception_4a_double_3x3_2_bn_out)
        inception_4a_pool_out = self.inception_4a_pool(inception_3c_output_out)
        inception_4a_pool_proj_out = self.inception_4a_pool_proj(inception_4a_pool_out)
        inception_4a_pool_proj_bn_out = self.inception_4a_pool_proj_bn(inception_4a_pool_proj_out)
        inception_4a_relu_pool_proj_out = self.inception_4a_relu_pool_proj(inception_4a_pool_proj_bn_out)
        inception_4a_output_out = self.concate((inception_4a_relu_1x1_out, inception_4a_relu_3x3_out, inception_4a_relu_double_3x3_2_out, inception_4a_relu_pool_proj_out))
        inception_4b_1x1_out = self.inception_4b_1x1(inception_4a_output_out)
        inception_4b_1x1_bn_out = self.inception_4b_1x1_bn(inception_4b_1x1_out)
        inception_4b_relu_1x1_out = self.inception_4b_relu_1x1(inception_4b_1x1_bn_out)
        inception_4b_3x3_reduce_out = self.inception_4b_3x3_reduce(inception_4a_output_out)
        inception_4b_3x3_reduce_bn_out = self.inception_4b_3x3_reduce_bn(inception_4b_3x3_reduce_out)
        inception_4b_relu_3x3_reduce_out = self.inception_4b_relu_3x3_reduce(inception_4b_3x3_reduce_bn_out)
        inception_4b_3x3_out = self.inception_4b_3x3(inception_4b_relu_3x3_reduce_out)
        inception_4b_3x3_bn_out = self.inception_4b_3x3_bn(inception_4b_3x3_out)
        inception_4b_relu_3x3_out = self.inception_4b_relu_3x3(inception_4b_3x3_bn_out)
        inception_4b_double_3x3_reduce_out = self.inception_4b_double_3x3_reduce(inception_4a_output_out)
        inception_4b_double_3x3_reduce_bn_out = self.inception_4b_double_3x3_reduce_bn(inception_4b_double_3x3_reduce_out)
        inception_4b_relu_double_3x3_reduce_out = self.inception_4b_relu_double_3x3_reduce(inception_4b_double_3x3_reduce_bn_out)
        inception_4b_double_3x3_1_out = self.inception_4b_double_3x3_1(inception_4b_relu_double_3x3_reduce_out)
        inception_4b_double_3x3_1_bn_out = self.inception_4b_double_3x3_1_bn(inception_4b_double_3x3_1_out)
        inception_4b_relu_double_3x3_1_out = self.inception_4b_relu_double_3x3_1(inception_4b_double_3x3_1_bn_out)
        inception_4b_double_3x3_2_out = self.inception_4b_double_3x3_2(inception_4b_relu_double_3x3_1_out)
        inception_4b_double_3x3_2_bn_out = self.inception_4b_double_3x3_2_bn(inception_4b_double_3x3_2_out)
        inception_4b_relu_double_3x3_2_out = self.inception_4b_relu_double_3x3_2(inception_4b_double_3x3_2_bn_out)
        inception_4b_pool_out = self.inception_4b_pool(inception_4a_output_out)
        inception_4b_pool_proj_out = self.inception_4b_pool_proj(inception_4b_pool_out)
        inception_4b_pool_proj_bn_out = self.inception_4b_pool_proj_bn(inception_4b_pool_proj_out)
        inception_4b_relu_pool_proj_out = self.inception_4b_relu_pool_proj(inception_4b_pool_proj_bn_out)
        inception_4b_output_out = self.concate((inception_4b_relu_1x1_out, inception_4b_relu_3x3_out, inception_4b_relu_double_3x3_2_out, inception_4b_relu_pool_proj_out))
        inception_4c_1x1_out = self.inception_4c_1x1(inception_4b_output_out)
        inception_4c_1x1_bn_out = self.inception_4c_1x1_bn(inception_4c_1x1_out)
        inception_4c_relu_1x1_out = self.inception_4c_relu_1x1(inception_4c_1x1_bn_out)
        inception_4c_3x3_reduce_out = self.inception_4c_3x3_reduce(inception_4b_output_out)
        inception_4c_3x3_reduce_bn_out = self.inception_4c_3x3_reduce_bn(inception_4c_3x3_reduce_out)
        inception_4c_relu_3x3_reduce_out = self.inception_4c_relu_3x3_reduce(inception_4c_3x3_reduce_bn_out)
        inception_4c_3x3_out = self.inception_4c_3x3(inception_4c_relu_3x3_reduce_out)
        inception_4c_3x3_bn_out = self.inception_4c_3x3_bn(inception_4c_3x3_out)
        inception_4c_relu_3x3_out = self.inception_4c_relu_3x3(inception_4c_3x3_bn_out)
        inception_4c_double_3x3_reduce_out = self.inception_4c_double_3x3_reduce(inception_4b_output_out)
        inception_4c_double_3x3_reduce_bn_out = self.inception_4c_double_3x3_reduce_bn(inception_4c_double_3x3_reduce_out)
        inception_4c_relu_double_3x3_reduce_out = self.inception_4c_relu_double_3x3_reduce(inception_4c_double_3x3_reduce_bn_out)
        inception_4c_double_3x3_1_out = self.inception_4c_double_3x3_1(inception_4c_relu_double_3x3_reduce_out)
        inception_4c_double_3x3_1_bn_out = self.inception_4c_double_3x3_1_bn(inception_4c_double_3x3_1_out)
        inception_4c_relu_double_3x3_1_out = self.inception_4c_relu_double_3x3_1(inception_4c_double_3x3_1_bn_out)
        inception_4c_double_3x3_2_out = self.inception_4c_double_3x3_2(inception_4c_relu_double_3x3_1_out)
        inception_4c_double_3x3_2_bn_out = self.inception_4c_double_3x3_2_bn(inception_4c_double_3x3_2_out)
        inception_4c_relu_double_3x3_2_out = self.inception_4c_relu_double_3x3_2(inception_4c_double_3x3_2_bn_out)
        inception_4c_pool_out = self.inception_4c_pool(inception_4b_output_out)
        inception_4c_pool_proj_out = self.inception_4c_pool_proj(inception_4c_pool_out)
        inception_4c_pool_proj_bn_out = self.inception_4c_pool_proj_bn(inception_4c_pool_proj_out)
        inception_4c_relu_pool_proj_out = self.inception_4c_relu_pool_proj(inception_4c_pool_proj_bn_out)
        inception_4c_output_out = self.concate((inception_4c_relu_1x1_out, inception_4c_relu_3x3_out, inception_4c_relu_double_3x3_2_out, inception_4c_relu_pool_proj_out))
        inception_4d_1x1_out = self.inception_4d_1x1(inception_4c_output_out)
        inception_4d_1x1_bn_out = self.inception_4d_1x1_bn(inception_4d_1x1_out)
        inception_4d_relu_1x1_out = self.inception_4d_relu_1x1(inception_4d_1x1_bn_out)
        inception_4d_3x3_reduce_out = self.inception_4d_3x3_reduce(inception_4c_output_out)
        inception_4d_3x3_reduce_bn_out = self.inception_4d_3x3_reduce_bn(inception_4d_3x3_reduce_out)
        inception_4d_relu_3x3_reduce_out = self.inception_4d_relu_3x3_reduce(inception_4d_3x3_reduce_bn_out)
        inception_4d_3x3_out = self.inception_4d_3x3(inception_4d_relu_3x3_reduce_out)
        inception_4d_3x3_bn_out = self.inception_4d_3x3_bn(inception_4d_3x3_out)
        inception_4d_relu_3x3_out = self.inception_4d_relu_3x3(inception_4d_3x3_bn_out)
        inception_4d_double_3x3_reduce_out = self.inception_4d_double_3x3_reduce(inception_4c_output_out)
        inception_4d_double_3x3_reduce_bn_out = self.inception_4d_double_3x3_reduce_bn(inception_4d_double_3x3_reduce_out)
        inception_4d_relu_double_3x3_reduce_out = self.inception_4d_relu_double_3x3_reduce(inception_4d_double_3x3_reduce_bn_out)
        inception_4d_double_3x3_1_out = self.inception_4d_double_3x3_1(inception_4d_relu_double_3x3_reduce_out)
        inception_4d_double_3x3_1_bn_out = self.inception_4d_double_3x3_1_bn(inception_4d_double_3x3_1_out)
        inception_4d_relu_double_3x3_1_out = self.inception_4d_relu_double_3x3_1(inception_4d_double_3x3_1_bn_out)
        inception_4d_double_3x3_2_out = self.inception_4d_double_3x3_2(inception_4d_relu_double_3x3_1_out)
        inception_4d_double_3x3_2_bn_out = self.inception_4d_double_3x3_2_bn(inception_4d_double_3x3_2_out)
        inception_4d_relu_double_3x3_2_out = self.inception_4d_relu_double_3x3_2(inception_4d_double_3x3_2_bn_out)
        inception_4d_pool_out = self.inception_4d_pool(inception_4c_output_out)
        inception_4d_pool_proj_out = self.inception_4d_pool_proj(inception_4d_pool_out)
        inception_4d_pool_proj_bn_out = self.inception_4d_pool_proj_bn(inception_4d_pool_proj_out)
        inception_4d_relu_pool_proj_out = self.inception_4d_relu_pool_proj(inception_4d_pool_proj_bn_out)
        inception_4d_output_out = self.concate((inception_4d_relu_1x1_out, inception_4d_relu_3x3_out, inception_4d_relu_double_3x3_2_out, inception_4d_relu_pool_proj_out))
        inception_4e_3x3_reduce_out = self.inception_4e_3x3_reduce(inception_4d_output_out)
        inception_4e_3x3_reduce_bn_out = self.inception_4e_3x3_reduce_bn(inception_4e_3x3_reduce_out)
        inception_4e_relu_3x3_reduce_out = self.inception_4e_relu_3x3_reduce(inception_4e_3x3_reduce_bn_out)
        inception_4e_3x3_out = self.inception_4e_3x3(inception_4e_relu_3x3_reduce_out)
        inception_4e_3x3_bn_out = self.inception_4e_3x3_bn(inception_4e_3x3_out)
        inception_4e_relu_3x3_out = self.inception_4e_relu_3x3(inception_4e_3x3_bn_out)
        inception_4e_double_3x3_reduce_out = self.inception_4e_double_3x3_reduce(inception_4d_output_out)

        inception_4e_double_3x3_reduce_bn_out = self.inception_4e_double_3x3_reduce_bn(inception_4e_double_3x3_reduce_out)
        inception_4e_relu_double_3x3_reduce_out = self.inception_4e_relu_double_3x3_reduce(inception_4e_double_3x3_reduce_bn_out)
        inception_4e_double_3x3_1_out = self.inception_4e_double_3x3_1(inception_4e_relu_double_3x3_reduce_out)
        inception_4e_double_3x3_1_bn_out = self.inception_4e_double_3x3_1_bn(inception_4e_double_3x3_1_out)
        inception_4e_relu_double_3x3_1_out = self.inception_4e_relu_double_3x3_1(inception_4e_double_3x3_1_bn_out)
        inception_4e_double_3x3_2_out = self.inception_4e_double_3x3_2(inception_4e_relu_double_3x3_1_out)
        inception_4e_double_3x3_2_bn_out = self.inception_4e_double_3x3_2_bn(inception_4e_double_3x3_2_out)
        inception_4e_relu_double_3x3_2_out = self.inception_4e_relu_double_3x3_2(inception_4e_double_3x3_2_bn_out)
        inception_4e_pool_out = self.inception_4e_pool(inception_4d_output_out)
        inception_4e_output_out = self.concate((inception_4e_relu_3x3_out, inception_4e_relu_double_3x3_2_out, inception_4e_pool_out))
        inception_5a_1x1_out = self.inception_5a_1x1(inception_4e_output_out)
        inception_5a_1x1_bn_out = self.inception_5a_1x1_bn(inception_5a_1x1_out)
        inception_5a_relu_1x1_out = self.inception_5a_relu_1x1(inception_5a_1x1_bn_out)
        inception_5a_3x3_reduce_out = self.inception_5a_3x3_reduce(inception_4e_output_out)
        inception_5a_3x3_reduce_bn_out = self.inception_5a_3x3_reduce_bn(inception_5a_3x3_reduce_out)
        inception_5a_relu_3x3_reduce_out = self.inception_5a_relu_3x3_reduce(inception_5a_3x3_reduce_bn_out)
        inception_5a_3x3_out = self.inception_5a_3x3(inception_5a_relu_3x3_reduce_out)
        inception_5a_3x3_bn_out = self.inception_5a_3x3_bn(inception_5a_3x3_out)
        inception_5a_relu_3x3_out = self.inception_5a_relu_3x3(inception_5a_3x3_bn_out)
        inception_5a_double_3x3_reduce_out = self.inception_5a_double_3x3_reduce(inception_4e_output_out)
        inception_5a_double_3x3_reduce_bn_out = self.inception_5a_double_3x3_reduce_bn(inception_5a_double_3x3_reduce_out)
        inception_5a_relu_double_3x3_reduce_out = self.inception_5a_relu_double_3x3_reduce(inception_5a_double_3x3_reduce_bn_out)
        inception_5a_double_3x3_1_out = self.inception_5a_double_3x3_1(inception_5a_relu_double_3x3_reduce_out)
        inception_5a_double_3x3_1_bn_out = self.inception_5a_double_3x3_1_bn(inception_5a_double_3x3_1_out)
        inception_5a_relu_double_3x3_1_out = self.inception_5a_relu_double_3x3_1(inception_5a_double_3x3_1_bn_out)
        inception_5a_double_3x3_2_out = self.inception_5a_double_3x3_2(inception_5a_relu_double_3x3_1_out)
        inception_5a_double_3x3_2_bn_out = self.inception_5a_double_3x3_2_bn(inception_5a_double_3x3_2_out)
        inception_5a_relu_double_3x3_2_out = self.inception_5a_relu_double_3x3_2(inception_5a_double_3x3_2_bn_out)
        inception_5a_pool_out = self.inception_5a_pool(inception_4e_output_out)
        inception_5a_pool_proj_out = self.inception_5a_pool_proj(inception_5a_pool_out)
        inception_5a_pool_proj_bn_out = self.inception_5a_pool_proj_bn(inception_5a_pool_proj_out)
        inception_5a_relu_pool_proj_out = self.inception_5a_relu_pool_proj(inception_5a_pool_proj_bn_out)
        inception_5a_output_out = self.concate((inception_5a_relu_1x1_out, inception_5a_relu_3x3_out, inception_5a_relu_double_3x3_2_out, inception_5a_relu_pool_proj_out))
        inception_5b_1x1_out = self.inception_5b_1x1(inception_5a_output_out)
        inception_5b_1x1_bn_out = self.inception_5b_1x1_bn(inception_5b_1x1_out)
        inception_5b_relu_1x1_out = self.inception_5b_relu_1x1(inception_5b_1x1_bn_out)
        inception_5b_3x3_reduce_out = self.inception_5b_3x3_reduce(inception_5a_output_out)
        inception_5b_3x3_reduce_bn_out = self.inception_5b_3x3_reduce_bn(inception_5b_3x3_reduce_out)
        inception_5b_relu_3x3_reduce_out = self.inception_5b_relu_3x3_reduce(inception_5b_3x3_reduce_bn_out)
        inception_5b_3x3_out = self.inception_5b_3x3(inception_5b_relu_3x3_reduce_out)
        inception_5b_3x3_bn_out = self.inception_5b_3x3_bn(inception_5b_3x3_out)
        inception_5b_relu_3x3_out = self.inception_5b_relu_3x3(inception_5b_3x3_bn_out)
        inception_5b_double_3x3_reduce_out = self.inception_5b_double_3x3_reduce(inception_5a_output_out)
        inception_5b_double_3x3_reduce_bn_out = self.inception_5b_double_3x3_reduce_bn(inception_5b_double_3x3_reduce_out)
        inception_5b_relu_double_3x3_reduce_out = self.inception_5b_relu_double_3x3_reduce(inception_5b_double_3x3_reduce_bn_out)
        inception_5b_double_3x3_1_out = self.inception_5b_double_3x3_1(inception_5b_relu_double_3x3_reduce_out)
        inception_5b_double_3x3_1_bn_out = self.inception_5b_double_3x3_1_bn(inception_5b_double_3x3_1_out)
        inception_5b_relu_double_3x3_1_out = self.inception_5b_relu_double_3x3_1(inception_5b_double_3x3_1_bn_out)
        inception_5b_double_3x3_2_out = self.inception_5b_double_3x3_2(inception_5b_relu_double_3x3_1_out)
        inception_5b_double_3x3_2_bn_out = self.inception_5b_double_3x3_2_bn(inception_5b_double_3x3_2_out)
        inception_5b_relu_double_3x3_2_out = self.inception_5b_relu_double_3x3_2(inception_5b_double_3x3_2_bn_out)
        inception_5b_pool_out = self.inception_5b_pool(inception_5a_output_out)
        inception_5b_pool_proj_out = self.inception_5b_pool_proj(inception_5b_pool_out)
        inception_5b_pool_proj_bn_out = self.inception_5b_pool_proj_bn(inception_5b_pool_proj_out)
        inception_5b_relu_pool_proj_out = self.inception_5b_relu_pool_proj(inception_5b_pool_proj_bn_out)
        inception_5b_output_out = self.concate((inception_5b_relu_1x1_out, inception_5b_relu_3x3_out, inception_5b_relu_double_3x3_2_out, inception_5b_relu_pool_proj_out))
        return inception_5b_output_out

    def construct(self, x):
        x = self.features(x)
        x = self.global_pool(x)
        x = self.fc(x)
        return x
